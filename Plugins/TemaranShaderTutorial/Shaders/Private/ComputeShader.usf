// Base shader origin:
// https://www.shadertoy.com/view/MdXSzS
// The Big Bang - just a small explosion somewhere in a massive Galaxy of Universes.
// Outside of this there's a massive galaxy of 'Galaxy of Universes'... etc etc. :D
//
// HLSL translation and parameterization by Temaran

Texture2D<float4> InputTextureDepth;
Texture2D<float4> InputTextureSemantics;
Texture2D<float4> InputTextureIntensity;
float2 TextureSize;
float SimulationState;
RWStructuredBuffer<float4> OutputBufferXYZI;
RWStructuredBuffer<float4> OutputBufferSemantics;
[numthreads(THREADGROUPSIZE_X, THREADGROUPSIZE_Y, THREADGROUPSIZE_Z)]
void MainComputeShader(uint3 ThreadId : SV_DispatchThreadID)
{
	// Set up some variables we are going to need
	float2 iResolution = float2(TextureSize.x, TextureSize.y);
	float2 uv = (ThreadId.xy / iResolution.xy) - 0.5;
	float iGlobalTime = SimulationState;
	if(ThreadId.x == ThreadId.y)
	{
		OutputBufferXYZI[ThreadId.x] = float4(ThreadId.x, ThreadId.x, ThreadId.x, ThreadId.x);
		OutputBufferXYZI[ThreadId.x] = float4(ThreadId.x + 1, ThreadId.x + 1, ThreadId.x + 1, ThreadId.x + 1);
		OutputBufferXYZI[ThreadId.x] = float4(ThreadId.x + 2, ThreadId.x + 2, ThreadId.x + 2, ThreadId.x + 2);
		OutputBufferXYZI[ThreadId.x] = float4(ThreadId.x + 4, ThreadId.x + 3, ThreadId.x + 3, ThreadId.x + 3);
		OutputBufferSemantics[ThreadId.x] = float4(ThreadId.x + 5, ThreadId.x + 5, ThreadId.x + 5, ThreadId.x + 5);
		OutputBufferSemantics[ThreadId.x] = float4(ThreadId.x + 6, ThreadId.x + 6, ThreadId.x + 6, ThreadId.x + 6);
		OutputBufferSemantics[ThreadId.x] = float4(ThreadId.x + 7, ThreadId.x + 7, ThreadId.x + 7, ThreadId.x + 7);
		OutputBufferSemantics[ThreadId.x] = float4(ThreadId.x + 8, ThreadId.x + 8, ThreadId.x + 8, ThreadId.x + 8);
	}
}
